{"version":3,"sources":["App.module.css","containers/Game.module.css","components/Container/Container.module.css","components/Scoreboard/Scoreboard.module.css","containers/Home.module.css","components/Container/index.js","components/ScoreChip.js","components/Scoreboard/index.js","components/Tooltip.js","components/Snippet/index.js","components/Snackbar.js","containers/Game.js","containers/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","children","center","className","clsx","styles","container","centerVertically","defaultProps","useStyles","makeStyles","theme","root","display","justifyContent","flexWrap","chip","margin","spacing","CustomChip","score","text","primary","secondary","classes","color","Chip","avatar","Avatar","label","Scoreboard","completed","failedAttempts","skipped","time","fastestScore","localStorage","getItem","scoreWrapper","style","fontVariantNumeric","Math","floor","slice","ScoreChip","StyledTooltip","withStyles","tooltip","backgroundColor","maxWidth","fontSize","typography","pxToRem","border","Tooltip","CustomTooltip","placement","content","title","SyntaxHighlighter","registerLanguage","js","Snippet","snippet","snippetName","Object","keys","snippetDetails","snippetBody","Array","isArray","body","join","replace","description","snippetTitle","language","a11yDark","customStyle","textAlign","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","green","palette","dark","main","amber","icon","iconVariant","opacity","marginRight","message","alignItems","CustomSnackbarContentWrapper","props","onClose","variant","Icon","SnackbarContent","aria-describedby","id","action","IconButton","key","aria-label","onClick","CustomSnackbar","open","handleClose","Snackbar","anchorOrigin","vertical","horizontal","Game","snippetsFile","onEnd","inputEl","useRef","useState","snippetKeys","setSnippetKeys","currentSnippetKey","setCurrentSnippetKey","currentScore","setCurrentScore","seconds","setSeconds","gameOver","setGameOver","submit","useCallback","current","value","prefix","filter","oldScore","skip","useEffect","onSubmit","event","keyCode","preventDefault","onSkip","window","addEventListener","removeEventListener","interval","setInterval","s","clearInterval","length","random","console","log","setItem","gameInput","ref","type","disabled","gameInputGroup","Button","size","reason","Home","onStart","homeButton","hasProperty","obj","prop","prototype","hasOwnProperty","call","valueIsType","arraysAllowed","every","nestedValue","hasPropertyOfType","App","isGameActive","setGameActive","currentFile","setCurrentFile","fileError","setFileError","onDrop","acceptedFiles","reader","FileReader","onabort","onerror","onload","snippets","JSON","parse","result","values","some","Error","name","readAsText","useDropzone","getRootProps","getInputProps","isDragActive","app","dropZone","fileDescription","highscore","defaultSnippets","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f87a4013.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"dropZone\":\"App_dropZone__1KIka\",\"fileError\":\"App_fileError__38TaA\",\"fileDescription\":\"App_fileDescription__2f_Mv\",\"highscore\":\"App_highscore__2foi-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameInputGroup\":\"Game_gameInputGroup__11xc6\",\"gameInput\":\"Game_gameInput__3FrXr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\",\"centerVertically\":\"Container_centerVertically__3fRVL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoreWrapper\":\"Scoreboard_scoreWrapper__2A7X7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeLogo\":\"Home_homeLogo__3ctbO\",\"homeButton\":\"Home_homeButton__3SngM\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styles from './Container.module.css';\n\nconst Container = ({ children, center }) => {\n  return (\n    <div className={clsx(styles.container, { [styles.centerVertically]: center })}>{children}</div>\n  );\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  center: PropTypes.bool,\n};\n\nContainer.defaultProps = {\n  center: false,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst CustomChip = ({ score, text, primary, secondary }) => {\n  const classes = useStyles();\n\n  let color = 'default';\n  if (primary) {\n    color = 'primary';\n  } else if (secondary) {\n    color = 'secondary';\n  }\n\n  return (\n    <Chip\n      avatar={<Avatar>{`${score}`}</Avatar>}\n      label={text}\n      color={color}\n      className={classes.chip}\n    />\n  );\n};\n\nCustomChip.propTypes = {\n  score: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n};\n\nCustomChip.defaultProps = {\n  primary: false,\n  secondary: false,\n};\n\nexport default CustomChip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ScoreChip from '../ScoreChip';\nimport styles from './Scoreboard.module.css';\n\nconst Scoreboard = ({ score: { completed, failedAttempts, skipped }, time }) => {\n  const fastestScore = localStorage.getItem('fastestScore');\n  return (\n    <div className={styles.scoreWrapper}>\n      <h5 style={{ fontVariantNumeric: 'tabular-nums' }}>{`Highscore: ${Math.floor(\n        fastestScore / 3600\n      )}:${`0${Math.floor(fastestScore / 60)}`.slice(-2)}:${`0${Math.floor(\n        fastestScore % 60\n      )}`.slice(-2)}`}</h5>\n      <div>\n        <ScoreChip score={completed} text=\"Completed\" primary />\n        <ScoreChip score={failedAttempts} text=\"Failed\" secondary />\n        <ScoreChip score={skipped} text=\"Skipped\" />\n      </div>\n      <h4 style={{ fontVariantNumeric: 'tabular-nums' }}>{`${Math.floor(\n        time / 3600\n      )}:${`0${Math.floor(time / 60)}`.slice(-2)}:${`0${Math.floor(time % 60)}`.slice(-2)}`}</h4>\n    </div>\n  );\n};\n\nScoreboard.propTypes = {\n  score: PropTypes.shape({\n    completed: PropTypes.number.isRequired,\n    failedAttempts: PropTypes.number.isRequired,\n    skipped: PropTypes.number.isRequired,\n  }).isRequired,\n  time: PropTypes.number.isRequired,\n};\n\nexport default Scoreboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst StyledTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nconst CustomTooltip = ({ placement, content, children }) => (\n  <StyledTooltip placement={placement} title={content}>\n    {children}\n  </StyledTooltip>\n);\n\nCustomTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n  placement: PropTypes.string,\n  content: PropTypes.node.isRequired,\n};\n\nCustomTooltip.defaultProps = {\n  placement: 'top',\n};\n\nexport default CustomTooltip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\nimport a11yDark from 'react-syntax-highlighter/dist/esm/styles/hljs/a11y-dark';\nimport Tooltip from '../Tooltip';\nimport styles from './Snippet.module.css';\n\nSyntaxHighlighter.registerLanguage('javascript', js);\n\nconst Snippet = ({ snippet }) => {\n  const snippetName = Object.keys(snippet)[0];\n  const snippetDetails = snippet[snippetName];\n  const snippetBody = Array.isArray(snippetDetails.body)\n    ? snippetDetails.body.join('\\n').replace('\\t', '  ')\n    : snippetDetails.body;\n\n  return (\n    <div>\n      <Tooltip placement=\"top\" content={snippetDetails.description || 'No description'}>\n        <h3 className={styles.snippetTitle}>{snippetName}</h3>\n      </Tooltip>\n      <SyntaxHighlighter language=\"javascript\" style={a11yDark} customStyle={{ textAlign: 'left' }}>\n        {snippetBody}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nSnippet.propTypes = {\n  snippet: PropTypes.shape({}).isRequired,\n};\n\nexport default Snippet;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport IconButton from '@material-ui/core/IconButton';\nimport { amber, green } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nfunction CustomSnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const { className, message, onClose, variant } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n    />\n  );\n}\n\nCustomSnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nCustomSnackbarContentWrapper.defaultProps = {\n  className: '',\n};\n\nconst CustomSnackbar = ({ open, handleClose, variant, message }) => {\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      open={open}\n      onClose={handleClose}\n    >\n      <CustomSnackbarContentWrapper onClose={handleClose} variant={variant} message={message} />\n    </Snackbar>\n  );\n};\n\nCustomSnackbar.propTypes = {\n  open: PropTypes.bool,\n  handleClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n  message: PropTypes.string.isRequired,\n};\n\nCustomSnackbar.defaultProps = {\n  open: false,\n  handleClose: () => {},\n};\n\nexport default CustomSnackbar;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport styles from './Game.module.css';\nimport { Container, Scoreboard, Snippet } from '../components';\nimport CustomSnackbar from '../components/Snackbar';\n\nconst MAX_COMPLETED_SNIPPETS = 10;\n\nconst getRandomSnippetKey = keys => keys[Math.floor(Math.random() * keys.length)];\n\nconst Game = ({ snippetsFile, onEnd }) => {\n  const inputEl = useRef(null);\n  const [snippetKeys, setSnippetKeys] = useState(Object.keys(snippetsFile.content));\n  const [currentSnippetKey, setCurrentSnippetKey] = useState(null);\n  const [currentScore, setCurrentScore] = useState({ completed: 0, failedAttempts: 0, skipped: 0 });\n  const [seconds, setSeconds] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  // Submit entered value and adjust score\n  const submit = useCallback(() => {\n    if (inputEl.current.value !== '') {\n      if (inputEl.current.value === snippetsFile.content[currentSnippetKey].prefix) {\n        setSnippetKeys(keys => keys.filter(key => key !== currentSnippetKey));\n        setCurrentScore(oldScore => ({ ...oldScore, completed: oldScore.completed + 1 }));\n        inputEl.current.value = '';\n      } else {\n        setCurrentScore(oldScore => ({\n          ...oldScore,\n          failedAttempts: oldScore.failedAttempts + 1,\n        }));\n      }\n    }\n  }, [currentSnippetKey, snippetsFile.content]);\n\n  // Skip the current snippet\n  const skip = useCallback(() => {\n    setSnippetKeys(keys => keys.filter(key => key !== currentSnippetKey));\n    setCurrentScore(oldScore => ({ ...oldScore, skipped: oldScore.skipped + 1 }));\n    inputEl.current.value = '';\n  }, [currentSnippetKey]);\n\n  // Listeners for hitting 'enter' to submit or 'esc' to skip\n  useEffect(() => {\n    const onSubmit = event => {\n      if (event.keyCode === 13) {\n        event.preventDefault();\n        submit();\n      }\n    };\n    const onSkip = event => {\n      if (event.keyCode === 27) {\n        event.preventDefault();\n        skip();\n      }\n    };\n    window.addEventListener('keyup', onSubmit);\n    window.addEventListener('keyup', onSkip);\n    return () => {\n      window.removeEventListener('keyup', onSubmit);\n      window.removeEventListener('keyup', onSkip);\n    };\n  }, [currentSnippetKey, submit, skip]);\n\n  // Handle game time\n  useEffect(() => {\n    let interval = null;\n    if (!gameOver) {\n      interval = setInterval(() => {\n        setSeconds(s => s + 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [gameOver]);\n\n  // Set new snippet when current one is added to usedSnippets\n  useEffect(() => {\n    if (snippetKeys.length <= 0) {\n      setSnippetKeys(Object.keys(snippetsFile.content));\n    }\n    setCurrentSnippetKey(getRandomSnippetKey(snippetKeys));\n  }, [snippetKeys, snippetsFile.content]);\n\n  // End game when the MAX number of completed snippets is reached\n  useEffect(() => {\n    if (currentScore.completed >= MAX_COMPLETED_SNIPPETS) {\n      setGameOver(true);\n      const fastestScore = localStorage.getItem('fastestScore') || -1;\n      console.log('fastestScore', fastestScore);\n      if (seconds < fastestScore || fastestScore === -1) {\n        localStorage.setItem('fastestScore', seconds);\n      }\n    }\n  }, [currentScore, seconds]);\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setGameOver(false);\n    onEnd();\n  };\n\n  return (\n    <Container>\n      <Scoreboard score={currentScore} time={seconds} />\n      {currentSnippetKey && (\n        <Snippet snippet={{ [currentSnippetKey]: snippetsFile.content[currentSnippetKey] }} />\n      )}\n      <input className={styles.gameInput} ref={inputEl} type=\"text\" disabled={gameOver} />\n      <div className={styles.gameInputGroup}>\n        <Button onClick={submit} color=\"primary\" variant=\"contained\" disabled={gameOver}>\n          Submit\n        </Button>\n        <Button size=\"small\" onClick={skip} variant=\"contained\" disabled={gameOver}>\n          Skip\n        </Button>\n      </div>\n      <CustomSnackbar\n        open={gameOver}\n        handleClose={handleCloseSnackbar}\n        variant=\"success\"\n        message={`You've completed the game in ${`${Math.floor(seconds / 3600)}:${`0${Math.floor(\n          seconds / 60\n        )}`.slice(-2)}:${`0${Math.floor(seconds % 60)}`.slice(-2)}`}!`}\n      />\n    </Container>\n  );\n};\n\nGame.propTypes = {\n  onEnd: PropTypes.func.isRequired,\n  snippetsFile: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    content: (props, propName) => {\n      Object.values(props[propName]).forEach(value => {\n        if (typeof value !== 'object') {\n          return new Error('Each property in snippetsFile.content must be an object');\n        }\n        if (!value.prefix) {\n          return new Error('Each object in snippetsFile.content must contain a prefix property');\n        }\n        if (!value.body) {\n          return new Error('Each object in snippetsFile.content must contain a body property');\n        }\n        return null;\n      });\n    },\n  }).isRequired,\n};\n\nexport default Game;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Home.module.css';\nimport { Container } from '../components';\n\nconst Home = ({ onStart }) => {\n  return (\n    <Container center>\n      <button type=\"button\" className={styles.homeButton} onClick={onStart}>\n        Start Training\n      </button>\n    </Container>\n  );\n};\n\nHome.propTypes = {\n  onStart: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport styles from './App.module.css';\nimport Game from './containers/Game';\nimport Home from './containers/Home';\nimport defaultSnippets from './defaultSnippets';\n\nconst hasProperty = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nconst valueIsType = (value, type, arraysAllowed = false) => {\n  // If value is an array, check that the nested values matches the type\n  if (arraysAllowed && Array.isArray(value)) {\n    return value.every(nestedValue => valueIsType(nestedValue, type, true));\n  }\n\n  // If not an array\n  switch (type) {\n    case 'array':\n      return Array.isArray(value);\n    case 'string':\n      return typeof value === 'string';\n    case 'number':\n      return typeof value === 'number';\n    case 'boolean':\n      return typeof value === 'boolean';\n    case 'object':\n      return typeof value === 'object';\n    default:\n      return false;\n  }\n};\nconst hasPropertyOfType = (obj, prop, type, arraysAllowed = false) =>\n  hasProperty(obj, prop) && valueIsType(obj[prop], type, arraysAllowed);\n\nconst App = () => {\n  const [isGameActive, setGameActive] = useState(false);\n  const [currentFile, setCurrentFile] = useState(null);\n  const [fileError, setFileError] = useState('');\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles.length !== 1) {\n      setFileError('Currently only supporting selecting one snippet file at a time.');\n      return;\n    }\n\n    const reader = new FileReader();\n\n    reader.onabort = () => setFileError('File reading was aborted');\n    reader.onerror = () => setFileError('File reading has failed');\n    reader.onload = () => {\n      setCurrentFile(null);\n      setFileError('');\n      try {\n        const snippets = JSON.parse(reader.result);\n        if (\n          Object.values(snippets).some(\n            value =>\n              typeof value !== 'object' ||\n              !hasPropertyOfType(value, 'prefix', 'string', true) ||\n              !hasPropertyOfType(value, 'body', 'string', true)\n          )\n        ) {\n          throw new Error(\n            'The imported JSON file contains snippet(s) without the required properties.\\nReuired properties:\\n - prefix: string\\n - body: string or array of strings'\n          );\n        }\n        setCurrentFile({\n          name: acceptedFiles[0].name,\n          content: snippets,\n        });\n      } catch (error) {\n        if (error.name === 'SyntaxError') {\n          setFileError('File is invalid JSON');\n        } else {\n          setFileError(error.message);\n        }\n      }\n    };\n\n    reader.readAsText(acceptedFiles[0]);\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  if (!isGameActive) {\n    const fastestScore = localStorage.getItem('fastestScore');\n    return (\n      <div className={styles.app}>\n        <div className={styles.dropZone} {...getRootProps()}>\n          <input {...getInputProps()} />\n          {isDragActive ? (\n            <p>Drop the snippets file here ...</p>\n          ) : (\n            <p>Drag &apos;n&apos; drop a snippet file (JSON) here, or click to select file</p>\n          )}\n        </div>\n        {!!fileError && <p className={styles.fileError}>{fileError}</p>}\n        {!!currentFile && (\n          <p className={styles.fileDescription}>Current snippet file: {currentFile.name}</p>\n        )}\n        <Home onStart={() => setGameActive(true)} />\n        <h5\n          className={styles.highscore}\n          style={{ fontVariantNumeric: 'tabular-nums' }}\n        >{`Highscore: ${Math.floor(fastestScore / 3600)}:${`0${Math.floor(\n          fastestScore / 60\n        )}`.slice(-2)}:${`0${Math.floor(fastestScore % 60)}`.slice(-2)}`}</h5>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.app}>\n      <Game\n        snippetsFile={currentFile || { name: 'Default React snippets', content: defaultSnippets }}\n        onEnd={() => setGameActive(false)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}